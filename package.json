{
  "name": "attributesDb",
  "version": "0.1.0",
  "description": "Bootstrap project for Chaincodes attributesDb",
  "files": [
    "dist/*"
  ],
  "scripts": {
    "start": "npm run env:restart && npm run cc:start -- person",
    "forma:seed:enroll": "lerna run seed:enroll --scope administrative --stream",
    "forma:seed:data": "lerna run seed:data --scope administrative --stream",
    "seed": "./seed.sh",
    "install": "npm-run-all -s lerna:install",
    "build": "node ./update-paths.js",
    "env:restart": "hurl new",
    "test": "npm-run-all -s lerna:test",
    "env:clean": "hurl clean",
    "cc:start": "f() { npm run cc:package; npm run cc:install person; }; f",
    "cc:upgrade": "f() { npm run cc:package; hurl upgrade person node $1  -P ./chaincode-person; }; f",
    "cc:start:debug": "f() { npm run cc:package; npm run cc:install:debug; }; f",
    "===================INTERNALS===================": "===================NO NEED TO CALL THEM DIRECTLY===================",
    "lerna:install": "lerna bootstrap",
    "lerna:build": "lerna run build",
    "cc:package": "f() { npm run lerna:build; chaincode-manager --update --config ./chaincode.config.json --output ./chaincode-person package; npm run copy:indexes -- person; }; f",
    "cc:install": "f() { hurl install person node -P ./chaincode-person; }; f",
    "cc:install:debug": "f() { hurl install person node -P ./chaincode-person --debug; }; f",
    "lerna:test": "lerna exec npm run test",
    "copy:indexes": "f () { mkdir -p ./chaincode-person/META-INF/statedb/couchdb/indexes; cp -a ./indexes/ ./chaincode-person/META-INF/statedb/couchdb/indexes; }; f"
  },
  "devDependencies": {
    "@worldsibu/convector-adapter-mock": "~1.3.0",
    "@worldsibu/convector-platform-fabric": "~1.3.0",
    "@worldsibu/hurley": "^1.0.5",
    "fabric-ca-client": "~1.4.0",
    "fabric-client": "~1.4.0",
    "lerna": "^3.13.1",
    "npm-run-all": "^4.1.5"
  },
  "dependencies": {
    "@worldsibu/conv-rest-api": "^0.1.5"
  }
}
